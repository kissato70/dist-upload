Script for AWS S3 bucket upload from the distribution folder

  Command:  dist-upload-s3 [params]

  Optional params:
   -c    configFile)          The name of the config file to save (-w) or use. [aws.distconfig]
   -w                          Config file write mode, for creating configuration(s).
   -p    profileName         Sets the AWS profile name. [default]
   -r    regionName          Sets the AWS region name for the profile. [us-east-1]
   -a    accessKey           Sets the AWS IAM user's access_key for the profile.
   -s    secretKey           Sets the AWS IAM user's secret_access_key for the profile.
   -g    true|[false]        Should the name of the config file be added to .gitignore file.
   -d    distDirectory       Sets the distribution directory. [dist]
   -b    bucketName          Sets the AWS S3 bucket name in config.
   -i    bucketName|off      Sets the AWS S3 bucket name for incremental release backup in config.
   -R                          Rollback (undo) release: Rolls back the code to previsous state, deleting the last release.
   -m    versionLimit        The maximum number of versions kept in the bucket. Older will be deleted.
   -f    branchFolder        The folder for automated version storage. You can store different branches this way.
   -l    [tailNumber]          Lists [the last n number of]Â the release versions in the incremental backup bucket.
   -y                          Answers default option to the config questions. Hint: use for changing only the given params.
   -S                          Silent mode. Hides all the information about the process.

Examples
--------
To configure the system, as the first step:
  dist-upload-s3 -w
The script will ask all the setup parameters and save it to the default config file.

Creating a special config file (for example for staging):
  dist-upload-s3 -c myTestConfig -w
This will create a config file 'myTestconfig', which can be used for alternative uploads.

Sending this complete startup setup along with the webpack config to the team:
  dist-upload-s3 -w -d dist  -b ourProdBucket -i ourProdBackup -m 5
  dist-upload-s3 -w -d build -b ourTestBucket -i off -c stage
The script will ask for the personal AWS access keys.
Hint: Place the above into the package.json under the 'scripts' like this: "init" : "dist-upload-s3 -w dist ..."

Updating the config file, changing ONLY the given params
(In this example switching off the backup and changing the region):
  dist-upload-s3 -c myConfig -w -y -i off -r eu-west-1
 
Uploading the folder 'test_build' (other than the folder set in config) in silent mode, while using the branch name 'stage':
  dist-upload-s3 -d test_build -S -f stage
 
Listing the backup folder content, but only the last 3 versions:
  dist-upload-s3 -l 3
 
Uploading the dist folder (as set in the config) by leaving only 5 older versions alive, without status messages:
  dist-upload-s3 -m 5 -S
Any older versions above the number, will be deleted.

Uploading to the previously configured staging area:
  dist-upload-s3 -c stage


Written by: Attila Kiss, e-LET Kft, Hungary  ( GitHub: kissato70 )
Licence:  MIT
Buy me a beer (Donation): https://bit.ly/kissato70_paypal_donate
