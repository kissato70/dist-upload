#!/bin/bash

# *******************************************************************************************
#  Configurator script for AWS S3 bucket upload from the distribution folder
#
#  Optional params:
#   -c    (configFile)    The name of the config file. [aws.s3dist.config]
#   -p    (profileName)   Sets the AWS profile name. [default]
#   -d    (distDirectory) Sets the distribution directory. [dist]
#   -b    (bucketName)    Sets the AWS S3 bucket name.
#   -r    (regionName)    Sets the AWS region name for the profile. [us-east-1]
#   -a    (accessKey)     Sets the AWS IAM user's access_key for the profile.
#   -s    (secretKey)     Sets the AWS IAM user's secret_access_key for the profile.
#   -g    (true|[false])  Should the name of the config file be added to .gitignore file.
#   -y                    Answers 'yes' to the config file overwrite question.
#
#  Written by: Attila Kiss, e-LET Kft, Hungary  ( GitHub: kissato70 )
#  Licence:  MIT
# *******************************************************************************************

# Setting base variables
BASE_DIR=$(dirname "$0")
CONFIG_FILE_NAME_DEFAULT="aws"
CONFIG_FILE_TYPE="s3dist.config"
DIST_DIR_DEFAULT="dist"

# Check if aws-cli is installed
if command -v aws 2>&1 | grep -q 'aws' ; then
  :
else
  echo "The aws-cli installation is missing."; exit 1
fi

# Default values for AWS config
DEFAULT_PROFILE="default"
DEFAULT_BUCKET=""

# Reading out the optional flags
while getopts c:p:d:b:r:a:s:g:y flag
do
    case "${flag}" in
        c)  CONFIG_FILE_NAME=${OPTARG};;
        p)  PROFILE=${OPTARG};;
        d)  DIST_DIR=${OPTARG};;
        b)  S3_BUCKET=${OPTARG};;
        r)  AWS_REGION=${OPTARG};;
        a)  ACCESS_KEY=${OPTARG};;
        s)  SECRET_KEY=${OPTARG};;
        g)  GITIGNORE=${OPTARG};;
        y)  YES=true;;
    esac
done

if [[ "$CONFIG_FILE_NAME" =~ ^[A-Za-z][A-Za-z0-9]+$ ]]; then
  echo "Config file name: $CONFIG_FILE_NAME"
else
  echo "Invalid config file name: only characters and numbers allowed!"; exit 1
fi

CONFIG_FILE="$BASE_DIR/$CONFIG_FILE_NAME.$CONFIG_FILE_TYPE"

# If the config file already exists, confirm to overwrite
if test -f "$CONFIG_FILE"; then
  if [ -z "$YES" ]; then
    read -p "AWS config file already exists, do you want to overwrite it? (y/N): " confirm && [[ $confirm == [yY] || $confirm == [yY][eE][sS] ]] || exit 1
  fi
  while IFS= read -r ROW
  do
    params=(${ROW//=/ })
    case "${params[0]}" in
      AWS_PROFILE)
        DEFAULT_PROFILE=${params[1]}
        ;;
      DIST_DIR)
        DIST_DIR_DEFAULT=${params[1]}
        ;;
      S3_BUCKET)
        DEFAULT_BUCKET=${params[1]} 
        ;;
    esac
  done < "$CONFIG_FILE"
fi

# If not previously set, ask for which of the AWS (named)profiles to use
if [ -z "$PROFILE" ]; then
  read -p "AWS profile name [$DEFAULT_PROFILE]:" PROFILE 
  if [ -z "$PROFILE" ]; then
    PROFILE=$DEFAULT_PROFILE
  fi
fi

# Checking the given profile name
if [[ "$PROFILE" =~ ^[A-Za-z][A-Za-z0-9]+$ ]]; then
  echo "Using named profile: $PROFILE"
else
  echo "Invalid profile name: only characters and numbers are allowed, with a starting character."; exit 1;
fi

# Set the region and keys if present
if [ -z "$AWS_REGION" ]; then
  :
else
  if aws configure set region $AWS_REGION --profile $PROFILE 2>&1 | grep -q 'error'; then
    echo "Error at setting the region name ($AWS_REGION)!"; exit 1
  else
    echo "Region ($AWS_REGION) has been set for profile ($PROFILE)."
  fi
fi
if [ -z "$ACCESS_KEY" ]; then
  :
else
  if aws configure set aws_access_key_id $ACCESS_KEY --profile $PROFILE 2>&1 | grep -q 'error'; then
    echo "Error at setting the access key ($ACCESS_KEY)!"; exit 1
  else
    echo "Access key ($ACCESS_KEY) has been set for profile ($PROFILE)."
  fi
fi
if [ ! -z "$SECRET_KEY" ]; then
  if aws configure set aws_secret_access_key $SECRET_KEY --profile $PROFILE 2>&1 | grep -q 'error'; then
    echo "Error at setting the secret key (*** ${SECRET_KEY: (-4)})!"; exit 1
  else
    echo "Secret key (*** ${SECRET_KEY: (-4)}) has been set for profile ($PROFILE)."
  fi
fi


# Checking whether the profile exists
if [[ $(aws configure --profile $PROFILE list ) && $? -eq 0 ]]; then
  : # nothing to do
else
    # Running the AWS configure command, quiting if it has failed
    echo "Profile ($PROFILE) cannot be found, running the AWS configure command to set it up."
    aws configure --profile $PROFILE || exit 1 && echo "AWS configuration saved."
fi

if [ -z "$DIST_DIR" ]; then
  read -p "Dist directory [$DIST_DIR_DEFAULT]: " DIST_DIR
  if [ -z "$DIST_DIR"  ]; then
    DIST_DIR=$DIST_DIR_DEFAULT
  fi
else
  if [[ "$DIST_DIR" =~ ^[A-Za-z][A-Za-z0-9]+$ ]]; then
    echo "Using distribution directory: $DIST_DIR"
  else
    echo "Invalid dist directory name: only characters and numbers allowed!"; exit 1
  fi
fi
if [ ! -d "$DIST_DIR" ]; then
  echo "The distribution folder ($DIST_DIR) does not exists!"; exit 1
fi

# If not previously set, getting the S3 bucket name
if [ -z "$S3_BUCKET" ]; then
  read -p "Amazon S3 bucket name [$DEFAULT_BUCKET]: " S3_BUCKET
  if [ -z "$S3_BUCKET" ]; then
    S3_BUCKET=$DEFAULT_BUCKET
  fi
fi

# Checking the given bucket name format
if [[ "$S3_BUCKET" =~ ^[a-z][a-z0-9\-]+[a-z0-9]+$ ]]; then
  echo "Using S3 bucket: $S3_BUCKET"
else
  echo "Invalid bucket name!"; exit 1;
fi

# Checking whether the bucket exists on S3 and reachable with the given profile
if aws s3 ls $S3_BUCKET --profile $PROFILE  2>&1 | grep -q 'NoSuchBucket' ; then
  echo "The given S3 bucket '$S3_BUCKET' does not exists or not reachable with the credentials set in the profile '$PROFILE' !"; exit 1
else
  echo "Bucket exists."
fi
# Checking write permission on bucket
TEST_FILE="AWS_dist_configure_write_access_test.file"
echo "AWS distribution write access TEST FILE - If you read this, you can delete this file any time." > $BASE_DIR/$TEST_FILE 
if aws s3 cp $BASE_DIR/$TEST_FILE  s3://$S3_BUCKET --profile $PROFILE  2>&1 | grep -q 'error' ; then
  echo "Bucket write test has failed. Check the permissions of the user!"; exit 1
else
  echo "Bucket verified."
fi
# Clean up
rm $BASE_DIR/$TEST_FILE
aws s3 rm s3://$S3_BUCKET --profile $PROFILE

# Writing out the configuration
echo "" > "$CONFIG_FILE"    # first emptying the file
echo "AWS_PROFILE=$PROFILE" >> $CONFIG_FILE
echo "DIST_DIR=$DIST_DIR" >> $CONFIG_FILE
echo "S3_BUCKET=$S3_BUCKET" >> $CONFIG_FILE

# Adding the cinfig file to .gitignore
if [ "$GITIGNORE" == "true" ]; then
  if [ -f $BASE_DIR/../.gitignore ]; then
    if grep -q *.$CONFIG_FILE_TYPE $BASE_DIR/../.gitignore 2>&1 ; then
      :
    else
      echo "" >> $BASE_DIR/../.gitignore
      echo "# AWS S3 distribution config file" >> $BASE_DIR/../.gitignore
      echo *.$CONFIG_FILE_TYPE  >> $BASE_DIR/../.gitignore
      echo "" >> $BASE_DIR/../.gitignore
      echo "The config file type is added to the .gitignore file."
    fi
  else
    echo "If you will use Git in the future, you may add $CONFIG_FILE_NAME to your .gitignore file."
  fi
fi

CCONFIG=""
if [ "$CONFIG_FILE_NAME" != "$CONFIG_FILE_NAME_DEFAULT" ]; then
  CCONFIG=" -c $CONFIG_FILE_NAME"
fi

echo "Config file saved. You may use the command 'aws_configure$CCONFIG' to upload your site."
exit 0